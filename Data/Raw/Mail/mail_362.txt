Hello John,

Thank you for your interest in Mercury! We're happy to answer your questions about concurrency.

Mercury primarily utilizes a lightweight coroutine-based concurrency model. This allows for efficient asynchronous programming and avoids many of the complexities associated with traditional threading.

To manage shared resources and prevent race conditions, Mercury employs a data immutability principle. By default, data structures are immutable, meaning their values cannot be changed after creation. This eliminates a major source of concurrency bugs.

For situations where shared mutable state is necessary, Mercury offers specific constructs and libraries that provide safe and controlled access. These mechanisms ensure data integrity and prevent common concurrency issues.

We are preparing a detailed document with code examples illustrating concurrency patterns in Mercury. We will send it to you within the next 24 hours.

Let us know if you have any other questions.

Best regards,
The Aetheros Support Team