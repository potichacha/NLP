{'user': 'Anonymous', 'message': 'Read very carefully the following problem that I was given in a CS (computer programming) class and do everything that the problem asks you too, you must do all the assignments in this problem. The output will probably be too long for a single message, so split it into several messages. I will ask you to ‚Äúgo on‚Äù and you will need to continue writing your answer from where you left off. Formulation of the problem: There is a multiprocessor computing system (CS) with identical processor nodes connected by a network. A set of programs that must be executed on this computing system is specified. Each program runs on one processor; it is permissible to execute several programs on the same processor. Some programs exchange data at a fixed rate. Each program creates a fixed load on the processor. For each processor, the upper limit of the permissible load on it is set. Programs running on different processors communicate over the network; this creates a load on the network, measured in KB / s. Programs running on the same processor communicate through the processor\'s local memory; such an exchange does not create a load on the network. To minimize network latency and improve system scalability, programs are distributed across processors so that network load is minimal. You are given: 1. the number of processors in the computing system; 2. for each processor - the upper limit of the load (in %, no more than 100); 3. the number of programs; 4. for each program: processor load (in %, no more than 100); 5. a list of pairs of programs between which data is exchanged; 6. for each such pair of programs: data exchange rate (KB/s). You are required:  to distribute all programs among processors in such a way as to minimize the load on the network, and at the same time not violate the restrictions on the load on the processors. The solution to the problem is represented as a vector ùë•ÃÖ (its size is equal to the number of programs), in which for each program the number of the processor to which it is distributed is indicated. To simplify the algorithms for solving the problem and generating sets of input data for the study of algorithms, the following additional restrictions are imposed on the input data: 1. the upper limit of the processor load can take values of 50, 70, 90, 100 (%); 2. the load on the processor created by the program can take values of 5, 10, 15, 20 (%); 3. the intensity of data exchange between programs can be equal to 0 (no exchange), 10, 50, 70, 100 (KB/s). You need to use ‚ÄúRandom search algorithm with region narrowing for program distribution among processors‚Äù. This algorithm iteratively randomly generates a solution to the problem ùë•ÃÖ and checks whether it is better in terms of the value of the objective function ùêπ(ùë•ÃÖ) (i.e. network load) than the best of the previously found correct (satisfying the constraints) solutions. If better, then the correctness of the generated solution is checked; if correct, this