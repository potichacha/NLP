Write code using only zlib to archive multiple files into zip archive in C

Using only zlib to create a zip archive with multiple files in C is a bit more involved since zlib doesn't provide a direct API for creating zip files. However, you can still do it by constructing the zip file format manually. Here's a simple example of how to create a zip archive with multiple files using zlib in C:

continue

} int compress_file(FILE *src, FILE *dst, uLong *crc, uLong *compressed_size) { Bytef in_buffer[4096]; Bytef out_buffer[4096]; } void write_local_file_header(FILE *zip, const char *filename, uLong crc, uLong compressed_size, uLong uncompressed_size) { local_file_header header; header.signature = 0x04034b50; header.version = 20; // 2.0 header.flags = 0; header.compression = 8; // Deflate header.mod_time = 0; header.mod_date = 0; header.crc32 = crc; header.compressed_size = compressed_size; header.uncompressed_size = uncompressed_size; header.filename_length = strlen(filename); header.extra_field_length = 0; } void write_central_directory_file_header(FILE *zip, const char *filename, uLong crc, uLong compressed_size, uLong uncompressed_size, uLong local_header_offset) { central_directory_file_header header; header.signature = 0x02014b50; header.version_made_by = 20; //

continue

2.0 header.version_needed = 20; // 2.0 header.flags = 0; header.compression = 8; // Deflate header.mod_time = 0; header.mod_date = 0; header.crc32 = crc; header.compressed_size = compressed_size; header.uncompressed_size = uncompressed_size; header.filename_length = strlen(filename); header.extra_field_length = 0; header.comment_length = 0; header.disk_number_start = 0; header.internal_file_attributes = 0; header.external_file_attributes = 0; header.local_header_offset = local_header_offset; } void write_end_of_central_directory_record(FILE *zip, int num_files, uLong central_directory_size, uLong central_directory_offset) { end_of_central_directory_record record; record.signature = 0x06054b50; record.disk_number = 0; record.cd_disk_number = 0; record.disk_entries = num_files; record.total_entries = num_files; record.cd_size = central_directory_size; record.cd_offset = central_directory_offset; record.comment_length = 0; } And run it with: Please note that this is a minimal example and doesn't handle all possible edge cases. You might want to extend the code to handle errors more gracefully and support more advanced features like zip64 or different compression methods.

Winrar says the archive is broken however with repair it can be fixed and the files are accessible but not with the archive build with this code please fix