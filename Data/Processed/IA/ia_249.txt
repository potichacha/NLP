the following code uses an external library called jquery  function initialise() {  // This function is only called by Google, so we don\

Yes, here's the updated code that replaces all references to jQuery with vanilla JavaScript: Instead of using jQuery's  $(document).ready() , we're now using the  DOMContentLoaded  event to wait for the document to be fully loaded before making changes to the page. We're also using vanilla JavaScript to get the  map-canvas  and  broken-map  elements using  document.getElementById()  and then adding or removing the  hidden  class using the  classList  property.

why dont you use if (document.readyState !== "loading") { in the else statement as that\

Yes, you're right that checking the  document.readyState  property is a good way to make sure the DOM is fully loaded before making changes to the page. Here's the updated code that uses  document.readyState  instead of  DOMContentLoaded  in the  else  statement: This updated code checks if the  document.readyState  is already set to  'loading' , and if not, it assumes that the document is ready and makes the necessary changes to the page. If the  document.readyState  is still  'loading' , then it waits for the  DOMContentLoaded  event before making the changes, just like the original jQuery code. Using  document.readyState  can be a more reliable way to check if the DOM is fully loaded, as it accounts for cases where external resources like images or stylesheets are still loading.

when replacing jquery code with javascript, it is important to maintain the exact same functionality, please can you convert the original code i sent you to vanilla javascript again but it needs to work EXACTLY like jquery does