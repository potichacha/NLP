You are a veteran Typescript developer and algorithm expert... Write me a function called "extractMultiplierAndResolution" which takes as argument a string among those ones `["1", "5", "30", "240", "D", "W", "M"]` and return an object with this form `{multiplier: number, resolution: "m" | "H" | "D" | "W" | "M" | "Q" | "Y"}`.

As a veteran TypeScript developer and algorithm expert, I would implement the function  extractMultiplierAndResolution  like this: This function takes an input string and returns an object with the corresponding multiplier and resolution. If the input string is not in the list of valid inputs, it will return null.

Can you update your response by using a function to calculate the `MultiplierAndResolution` instead of a `Record`. This way we can pass any string, and it outputs the correct `MultiplierAndResolution` ?

Certainly! Here's an updated implementation of the  extractMultiplierAndResolution  function that calculates the  MultiplierAndResolution  for any given input string. In this implementation, the function assumes the input string to be a number followed by a resolution character or just a resolution character. The function should handle unexpected inputs gracefully and return null in such cases. In this implementation, the function first extracts the multiplier and resolution parts from the input string using a regular expression. Then, it parses the multiplier and resolution separately using the helper functions  parseMultiplier  and  parseResolution . If both the multiplier and resolution are valid, the function returns the  MultiplierAndResolution  object. Otherwise, it returns null.

Ok, now here a some specification: - The input string can only contains following resolution: "D", "W", "M", "Q", "Y" - If the input string contains only a number, it means it\

Given the new specifications, I've updated the  extractMultiplierAndResolution  function accordingly: This updated function adheres to the specified rules: The function returns the appropriate  MultiplierAndResolution  object based on the input string or null if the input string doesn't match the specified rules.

If the number of minutes is greater than 59, you need to use the correct resolution, for example, if you receive "240" as input string, you should return {multiplier: 4, resolution: "H"}

I\