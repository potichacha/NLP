write a powershell script to count the number of PDF files within each subfolder, and write the output to a CSV file. The output should consist of the folder name and the number of PDFS within that folder.

Here's a PowerShell script that will do what you're asking for: This script first defines the root directory that you want to start the search from ( $rootDirectory ). It then uses the  Get-ChildItem  cmdlet to get a list of all subdirectories within the root directory. Next, it creates an empty array ( $results ) to store the results of the script. The script then loops through each subdirectory, counts the number of PDF files within that subdirectory, and adds the results to the  $results  array. Finally, the script uses the  Export-Csv  cmdlet to write the results to a CSV file. The  -NoTypeInformation  parameter is used to exclude the type information from the output. This script should work as is, but you may need to modify the  $rootDirectory  variable to point to the correct directory on your system.

add a progress indicator

Sure! You can add a progress indicator to the script by adding a loop counter and displaying the progress after processing each subdirectory. Here\

Add an array to iterate over multiple root directories.

Sure! You can add an array of root directories to the script and process each one in turn. Here's the updated script: This script uses an array of root directories ( $rootDirectories ) to process multiple directories. It loops through each root directory, gets a list of subdirectories within that root directory, and processes each subdirectory just as in the previous version of the script. The only difference is that the full path of each subdirectory is now included in the results. This way, you can see which subdirectories belong to which root directory in the final report.

Write a version of that script in bash