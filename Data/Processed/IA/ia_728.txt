{'user': 'Anonymous', 'message': '5 / 5i have a main page which have all movies, order by position ASC and openingdate DESC. now i click into a movie, i need the sql to get details of the movie and also previous and next movie\'s scheduledfilmid.  for example here is the movie list in main page: movie1, movie2, movie3, movie4, movie5, movie6. and i clicked into movie4, previous scheduledfilmid should be movie3\'s scheduledfilmid, and next scheduledfilmid should be movie5\'s scheduledfilmid. please write the code and sql in single line. this is my current sql: std::string sql = "SELECT t.title, t.genre1, t.genre2, t.genre3, t.scheduledfilmid, t.audio, t.runtime, t.rating, t.shortname, t.openingdate, t.synopsis, t.castnames, t.directornames, COALESCE(prev.scheduledfilmid, (SELECT scheduledfilmid FROM nowShowingFilms ORDER BY position DESC LIMIT 1)) AS previous_scheduledfilmid, COALESCE(next.scheduledfilmid, (SELECT scheduledfilmid FROM nowShowingFilms ORDER BY position DESC LIMIT 1)) AS next_scheduledfilmid FROM nowShowingFilms t LEFT JOIN LATERAL (SELECT scheduledfilmid FROM nowShowingFilms WHERE position <= t.position AND scheduledfilmid!=t.scheduledfilmid ORDER BY position ASC LIMIT 1) prev ON true LEFT JOIN LATERAL (SELECT scheduledfilmid FROM nowShowingFilms WHERE position >= t.position AND scheduledfilmid!=t.scheduledfilmid ORDER BY position ASC LIMIT 1) next ON true WHERE t.scheduledfilmid = \'"+scheduledfilmid+"\';";'}
{'user': 'Chat GPT', 'message': "Here's a modified version of your SQL query, written in a single line: This query first creates a Common Table Expression (CTE) named  ordered_movies  to store the list of movies ordered by position and opening date, and assigns a row number based on this order. Then, it uses this CTE to join with the previous and next movies based on their row numbers."}