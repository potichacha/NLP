Please write a golang app that is a DNS server that forwards all requests to 8.8.8.8 and 1.1.1.1, and stores in a map all the hostnames to the resolved ips

Certainly! Here is an example of a simple DNS server written in Go that forwards all requests to Google's public DNS servers at 8.8.8.8 and 1.1.1.1, and stores the hostnames and resolved IP addresses in a map: To run the DNS server, save the code to a file called  main.go  and run the following command: The DNS server will listen for incoming requests on port 53 and forward them to Google's public DNS servers. The hostnames and resolved IP addresses will be stored in the  ipMap  map.

Can you please use sync.Map instead of map[string]string and a Mutex?

Certainly! Here is the modified version of the DNS server that uses a  sync.Map  and no mutex:

Can you repeat what you wrote? the formatting seems wrong.

Certainly! Here is the modified version of the DNS server that uses a  sync.Map  and no mutex: To retrieve the stored hostnames and resolved IP addresses from the  ipMap  sync.Map, you can use the  Range  method. Here is an example of how to iterate over the entries in the map and print them: This will print out each hostname and corresponding resolved IP address on a separate line.