{'user': 'Anonymous', 'message': 'Im getting the following error for this code "Unable to read file \'Screw_Detection_CNN.mlx\'. Input must be a MAT-file or an ASCII file containing numeric data with same number of columns in each row. Error in Circle_Detection_Test_CNN (line 4) model = load(\'Screw_Detection_CNN.mlx\');": function [screw_center_X, screw_center_Y] = Circle_Detection_Test_CNN() % Load the transfer learning model model = load(\'Screw_Detection_CNN.mlx\'); % Read the image img = imread(\'Edge_Detection_Case.jpg\'); % Resize the image to the required size of the model img_resized = imresize(img, [227 227]); % Get dimensions of the image %Original dimensions img_size = size(img); % get the size of the image imgheight = img_size(1); % get the height of the image imgwidth = img_size(2); % get the width of the image % Resized dimensions img_size_re = size(img_resized); % get the size of the image imgheight_re = img_size_re(1); % get the height of the image imgwidth_re = img_size_re(2); % get the width of the image % Split the image into four quadrants [rows, cols, ~] = size(img_resized); row_half = round(rows/2); col_half = round(cols/2); quad1 = img(1:row_half, 1:col_half, :); quad2 = img(1:row_half, col_half+1:end, :); quad3 = img(row_half+1:end, 1:col_half, :); quad4 = img(row_half+1:end, col_half+1:end, :); % Add labels and borders to each quadrant  labeled_quad1 = insertText(quad1, [0 0], "Quadrant 1", \'FontSize\', 18);  labeled_quad2 = insertText(quad2, [0 0], "Quadrant 2", \'FontSize\', 18);  labeled_quad3 = insertText(quad3, [0 0], "Quadrant 3", \'FontSize\', 18);  labeled_quad4 = insertText(quad4, [0 0], "Quadrant 4", \'FontSize\', 18);  img_labeled = [labeled_quad1 labeled_quad2; labeled_quad3 labeled_quad4];  img_labeled = insertShape(img_labeled, \'Rectangle\', [1 1 col_half row_half], \'LineWidth\', 3);  img_labeled = insertShape(img_labeled, \'Rectangle\', [col_half+1 1 col_half row_half], \'LineWidth\', 3);  img_labeled = insertShape(img_labeled, \'Rectangle\', [1 row_half+1 col_half rows-row_half], \'LineWidth\', 3);  img_labeled = insertShape(img_labeled, \'Rectangle\', [col_half+1 row_half+1 col_half rows-row_half], \'LineWidth\', 3);  % Show the labeled image  figure;  imshow(img_labeled);  % Ask user to select which quadrant they want to detect for circles quadPrompt = "Please select a quadrant of the image to detect screws: "; selectedQuad = input(quadPrompt); % Switch case for setting selected quadrant value with corresponding % quadrant switch selectedQuad  case 1  selectedQuad = quad1;  offset = [0,0] ;%No offset for quadrant 1  quadrant = 1;  case 2  selectedQuad = quad2;  offset = [0, col_half]; %offset in x-direction for quadrant 2  quadrant = 2;  case 3  selectedQuad = quad3;  offset = [row_half,0]; %offset in y-direction for quadrant 3  quadrant = 3;  case 4   selectedQuad = quad4;  offset = [row_half,col_half]; %offset in the x and y direction for quadrant 4  quadrant = 4; end % Note: They detect actual qua